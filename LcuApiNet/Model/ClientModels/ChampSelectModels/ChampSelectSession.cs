// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var champSelectSession = ChampSelectSession.FromJson(jsonString);

using LcuApiNet.Model.ClientModels.ChampSelectModels;

namespace LcuApiNet.Model.ClientModels
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ChampSelectSession
    {
        [JsonProperty("actions")]
        public SessionAction[][] Actions { get; set; }

        [JsonProperty("allowBattleBoost")]
        public bool AllowBattleBoost { get; set; }

        [JsonProperty("allowDuplicatePicks")]
        public bool AllowDuplicatePicks { get; set; }

        [JsonProperty("allowLockedEvents")]
        public bool AllowLockedEvents { get; set; }

        [JsonProperty("allowRerolling")]
        public bool AllowRerolling { get; set; }

        [JsonProperty("allowSkinSelection")]
        public bool AllowSkinSelection { get; set; }

        [JsonProperty("bans")]
        public Bans Bans { get; set; }

        [JsonProperty("benchChampionIds")]
        public int[] BenchChampionIds { get; set; }

        [JsonProperty("benchEnabled")]
        public bool BenchEnabled { get; set; }

        [JsonProperty("boostableSkinCount")]
        public int BoostableSkinCount { get; set; }

        [JsonProperty("chatDetails")]
        public SessionChatDetails ChatDetails { get; set; }

        [JsonProperty("counter")]
        public int Counter { get; set; }

        [JsonProperty("entitledFeatureState")]
        public EntitledFeatureState EntitledFeatureState { get; set; }

        [JsonProperty("gameId")]
        public long GameId { get; set; }

        [JsonProperty("hasSimultaneousBans")]
        public bool HasSimultaneousBans { get; set; }

        [JsonProperty("hasSimultaneousPicks")]
        public bool HasSimultaneousPicks { get; set; }

        [JsonProperty("isCustomGame")]
        public bool IsCustomGame { get; set; }

        [JsonProperty("isSpectating")]
        public bool IsSpectating { get; set; }

        [JsonProperty("localPlayerCellId")]
        public int LocalPlayerCellId { get; set; }

        [JsonProperty("lockedEventIndex")]
        public int LockedEventIndex { get; set; }

        [JsonProperty("myTeam")]
        public TeamMember[] MyTeam { get; set; }

        [JsonProperty("recoveryCounter")]
        public int RecoveryCounter { get; set; }

        [JsonProperty("rerollsRemaining")]
        public int RerollsRemaining { get; set; }

        [JsonProperty("skipChampionSelect")]
        public bool SkipChampionSelect { get; set; }

        [JsonProperty("theirTeam")]
        public TeamMember[] TheirTeam { get; set; }

        [JsonProperty("timer")]
        public SessionTimer Timer { get; set; }

        [JsonProperty("trades")]
        public object[] Trades { get; set; }
    }
}
